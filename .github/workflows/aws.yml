name: Deploy to ECS

on:
  push:
    branches:
      - main
      - branch1
      - branch2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Build and push Docker image
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/branch1" ]]; then
          IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/project1-app"
          docker build -t $IMAGE_URI ./project1
          docker push $IMAGE_URI
        elif [[ "${{ github.ref }}" == "refs/heads/branch2" ]]; then
          IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/project2-app"
          docker build -t $IMAGE_URI ./project2
          docker push $IMAGE_URI
        fi

    - name: Update ECS Task Definition
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        TASK_DEF=$(aws ecs describe-task-definition \
          --task-definition multi-container-task \
          --region $AWS_REGION)

        if [[ "${{ github.ref }}" == "refs/heads/branch1" ]]; then
          UPDATED_TASK_DEF=$(echo $TASK_DEF | jq '.taskDefinition | .containerDefinitions[0].image="'${AWS_ACCOUNT_ID}'.dkr.ecr.'${AWS_REGION}'.amazonaws.com/project1-app:latest"')
        elif [[ "${{ github.ref }}" == "refs/heads/branch2" ]]; then
          UPDATED_TASK_DEF=$(echo $TASK_DEF | jq '.taskDefinition | .containerDefinitions[1].image="'${AWS_ACCOUNT_ID}'.dkr.ecr.'${AWS_REGION}'.amazonaws.com/project2-app:latest"')
        fi

        echo $UPDATED_TASK_DEF > updated-task-def.json
        aws ecs register-task-definition --cli-input-json file://updated-task-def.json --region $AWS_REGION

    - name: Force New Deployment
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws ecs update-service \
          --cluster my-ec2-cluster \
          --service my-service \
          --task-definition multi-container-task \
          --force-new-deployment \
          --region $AWS_REGION
