# name: Deploy Project 1 to ECS

# on:
#   push:
#     branches:
#       - branch1

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Docker
#       uses: docker/setup-buildx-action@v2

#     - name: Log in to Amazon ECR
#       uses: aws-actions/amazon-ecr-login@v1
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: us-west-1

#     - name: Build and Push Docker Image
#       env:
#         AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
#         AWS_REGION: us-west-1
#       run: |
#         IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/project1-app"
        
#         # Build the Docker image
#         docker build --no-cache -t $IMAGE_URI ./myproject
        
#         # Tag the image with "latest"
#         docker tag $IMAGE_URI $IMAGE_URI:latest

#         # Push the Docker image to ECR
#         docker push $IMAGE_URI:latest

#     - name: Stop Existing ECS Tasks
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: us-west-1
#       run: |
#         # Fetch the currently running tasks for the task family
#         TASK_ARN_LIST=$(aws ecs list-tasks \
#           --cluster my-cluster \
#           --family my-task-def \
#           --region $AWS_REGION \
#           --query "taskArns" \
#           --output text)

#         # Stop all running tasks
#         for TASK_ARN in $TASK_ARN_LIST; do
#           echo "Stopping task $TASK_ARN"
#           aws ecs stop-task --cluster my-cluster --task $TASK_ARN --region $AWS_REGION
#         done

#     - name: Run New ECS Task
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: us-west-1
#       run: |
#         # Run a new task with the latest task definition
#         aws ecs run-task \
#           --cluster my-cluster \
#           --launch-type FARGATE \
#           --network-configuration "awsvpcConfiguration={subnets=[subnet-083f027b4042983e3],securityGroups=[sg-0ba1da8a176fc1e1c],assignPublicIp=ENABLED}" \
#           --task-definition my-task-def \
#           --region $AWS_REGION
name: Deploy Project 1 to ECS
on:
  push:
    branches:
      - branch1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.us-west-1.amazonaws.com/project1-app"
          docker build --no-cache -t $IMAGE_URI ./myproject
          docker tag $IMAGE_URI $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      - name: Update ECS Service
        run: |
          # Update the task definition with the new image
          TASK_DEFINITION=$(aws ecs describe-task-definition \
            --task-definition my-task-def \
            --region us-west-1 \
            --query taskDefinition)
          
          NEW_TASK_DEF=$(echo $TASK_DEFINITION | jq --arg IMAGE "$IMAGE_URI:latest" \
            '.containerDefinitions[0].image = $IMAGE')
          
          # Register new task definition
          REGISTERED_TASK_DEF=$(aws ecs register-task-definition \
            --cli-input-json "$NEW_TASK_DEF" \
            --region us-west-1)
          
          # Update ECS service to use new task definition
          aws ecs update-service \
            --cluster my-cluster \
            --service my-service \
            --task-definition my-task-def \
            --force-new-deployment \
            --region us-west-1
